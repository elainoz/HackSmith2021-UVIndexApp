ggplot() +
theme_light() +
# geom_rect(data = uvrisk, aes(NULL, NULL, ymin = imin, ymax = imax, fill = mycolor),
#           xmin = mdy_h("2021-03-25 04:00:00"), xmax = mdy_h("2021-03-26 00:00:00")) +
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank())
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(NULL, NULL, ymin = imin, ymax = imax, fill = mycolor),
xmin = mdy_h("2021-03-25 04:00:00"), xmax = mdy_h("2021-03-26 00:00:00")) +
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank())
ggplot() +
theme_light() +
# geom_rect(data = uvrisk, aes(NULL, NULL, ymin = imin, ymax = imax, fill = mycolor),
#           xmin = mdy_h("2021-03-25 04:00:00"), xmax = mdy_h("2021-03-26 00:00:00")) +
geom_area(aes(y = 10))+
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank())
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(NULL, NULL, ymin = imin, ymax = imax, fill = mycolor),
xmin = mdy_h("2021-03-25 04:00:00"), xmax = mdy_h("2021-03-26 00:00:00")) +
# geom_area(aes(y = 10))+
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank())
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(xmin = -Inf, xmax = Inf, ymin = imin, ymax = imax, fill = mycolor)) +
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank())
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(xmin = -as.Date(Inf), xmax = as.Date(Inf), ymin = imin, ymax = imax, fill = mycolor)) +
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank())
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(xmin = as.Date(-Inf), xmax = as.Date(Inf), ymin = imin, ymax = imax, fill = mycolor)) +
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank())
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(xmin = uvdatazip$NEW_DATE[0], xmax = uvdatazip$NEW_DATE[-1], ymin = imin, ymax = imax, fill = mycolor)) +
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank())
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(xmin = uvdatazip$NEW_DATE[1], xmax = uvdatazip$NEW_DATE[-1], ymin = imin, ymax = imax, fill = mycolor)) +
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank())
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(xmin = c(uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1]), xmax = c(uvdatazip$NEW_DATE[-1], uvdatazip$NEW_DATE[-1], uvdatazip$NEW_DATE[-1], uvdatazip$NEW_DATE[-1]), ymin = imin, ymax = imax, fill = mycolor)) +
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank())
last_error()
rlang::last_error()
rlang::last_trace()
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(xmin = c(uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1]), xmax = c(uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21]), ymin = imin, ymax = imax, fill = mycolor)) +
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank())
uvrisk <- data.frame(name = c("Low", "Moderate", "High", "Very High"),
imin = c(0,3,6,8),
imax = c(3,6,8,11),
mycolor = c("A", "B", "C", "D"))
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(xmin = c(uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1]), xmax = c(uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21]), ymin = imin, ymax = imax, fill = mycolor)) +
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank())
uvrisk <- data.frame(name = c("Low", "Moderate", "High", "Very High"),
imin = c(0,3,6,8),
imax = c(3,6,8,11),
mycolor = c("A", "B", "C", "D")) %>%
mutate(medy = imin + floor((imax-imin)/2))
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(xmin = c(uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1]), xmax = c(uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21]), ymin = imin, ymax = imax, fill = mycolor)) +
geom_text(data = uvrisk, aes(x = uvdatazip$NEW_DATE[1], y = medy, label = name))+
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank())
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(xmin = c(uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1]), xmax = c(uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21]), ymin = imin, ymax = imax, fill = mycolor)) +
geom_text(data = uvrisk, aes(x = uvdatazip$NEW_DATE[1], y = medy, label = name, size = 3))+
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank())
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(xmin = c(uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1]), xmax = c(uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21]), ymin = imin, ymax = imax, fill = mycolor)) +
geom_text(data = uvrisk, aes(x = uvdatazip$NEW_DATE[2], y = medy, label = name, size = 3))+
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank())
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(xmin = c(uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1]), xmax = c(uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21]), ymin = imin, ymax = imax, fill = mycolor)) +
geom_text(data = uvrisk, aes(x = uvdatazip$NEW_DATE[3], y = medy, label = name, size = 3))+
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank())
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(xmin = c(uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1]), xmax = c(uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21]), ymin = imin, ymax = imax, fill = mycolor)) +
geom_text(data = uvrisk, aes(x = uvdatazip$NEW_DATE[3], y = medy, label = name, size = 3))+
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank(),
legend.position = "None")
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(xmin = c(uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1]), xmax = c(uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21]), ymin = imin, ymax = imax, fill = mycolor)) +
geom_text(data = uvrisk, aes(x = uvdatazip$NEW_DATE[3], y = medy, label = name, size = 3))+
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
scale_x_continuous(expand = c(0,0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank(),
legend.position = "None")
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(xmin = c(uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1]), xmax = c(uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21]), ymin = imin, ymax = imax, fill = mycolor)) +
geom_text(data = uvrisk, aes(x = uvdatazip$NEW_DATE[3], y = medy, label = name, size = 3))+
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
#scale_x_continuous(expand = c(0,0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank(),
legend.position = "None")
# get uv index hourly given zip code
uv_userzip <- function(zip_arg) {
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url, zip_arg, "/JSON")
zipfull_url
uvdatazip <- fromJSON(readLines(zipfull_url))
}
uv_userzip("95129")
View(uvdatazip)
# get uv index hourly given zip code
uv_userzip <- function(zip_arg) {
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url, zip_arg, "/JSON")
zipfull_url
uvdatazip <- fromJSON(readLines(zipfull_url))
}
uv_userzip("85323")
View(uvdatazip)
# get uv index hourly given zip code
uv_userzip <- function(zip_arg) {
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url, zip_arg, "/JSON")
zipfull_url
newzipdata <- fromJSON(readLines(zipfull_url))
}
uv_userzip("85323")
library(tidyverse)
library(lubridate)
library(rjson)
library(jsonlite)
library(RCurl)
# get uv index hourly given zip code
uv_userzip <- function(zip_arg) {
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url, zip_arg, "/JSON")
zipfull_url
newzipdata <- fromJSON(readLines(zipfull_url))
}
uv_userzip("85323")
# get uv index hourly given zip code
uv_userzip <- function(zip_arg) {
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url, zip_arg, "/JSON")
zipfull_url
#newzipdata <- fromJSON(readLines(zipfull_url))
}
uv_userzip("85323")
# get uv index hourly given zip code
uv_userzip <- function(zip_arg) {
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url, zip_arg, "/JSON")
zipfull_url
newzipdata <- fromJSON(readLines(zipfull_url))
}
uv_userzip("85323")
# get uv index hourly given zip code
uv_userzip <- function(zip_arg) {
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url, zip_arg, "/JSON")
zipfull_url
newzipdata <- fromJSON(readLines(zipfull_url))
}
uv_userzip("85323")
newzipdata
# get uv index hourly given zip code
uv_userzip <- function(zip_arg) {
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url, zip_arg, "/JSON")
zipfull_url
newzipdata <- fromJSON(readLines(zipfull_url))
}
uv_userzip("20001")
newzipdata
# get uv index hourly given zip code
uv_userzip <- function(zip_arg){
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url,"95129/JSON")
zipfull_url
}
#uvdatazip <- fromJSON(readLines(zipfull_url))
# get uv index hourly given zip code
uv_userzip <- function(zip_arg){
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url,"95129/JSON")
uvdatazip <- fromJSON(readLines(zipfull_url))
}
# get uv index hourly given zip code
uv_userzip <- function(zip_arg){
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url,"95129/JSON")
uvdatazip <- fromJSON(readLines(zipfull_url))
}
uv_userzip("95129")
View(uvdatazip)
# get uv index hourly given zip code
uv_userzip <- function(zip_arg){
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url,"95129/JSON")
uvdatacity <- fromJSON(readLines(zipfull_url))
}
uv_userzip("95129")
View(uvdatacity)
# get uv index hourly given zip code
uv_userzip <- function(zip_arg){
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url,"95129/JSON")
newuvdata <- fromJSON(readLines(zipfull_url))
}
uv_userzip("95129")
# get uv index hourly given zip code
uv_userzip <- function(zip_arg){
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url,"95129/JSON")
newuvdata <- fromJSON(readLines(zipfull_url))
}
uv_userzip("95129")
# get uv index hourly given city, state
city_url <- paste0("https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/CITY/washington/STATE/dc/JSON")
uvdatacity <- fromJSON(readLines(city_url))
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url,"95129/JSON")
newuvdata <- fromJSON(readLines(zipfull_url))
View(newuvdata)
# get uv index hourly given zip code
uv_userzip <- function(zip_arg){
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url, zip_arg, "/JSON")
newuvdata <- fromJSON(readLines(zipfull_url))
}
uv_userzip("95129")
View(newuvdata)
# get uv index hourly given zip code
uv_userzip <- function(zip_arg){
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url, zip_arg, "/JSON")
newuvdata <- fromJSON(readLines(zipfull_url))
}
uv_userzip("95129")
# get uv index hourly given zip code
uv_userzip <- function(zip_arg){
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url, zip_arg, "/JSON")
newuvdata <- fromJSON(readLines(zipfull_url))
}
uv_userzip("95129")
zipfull_url
# get uv index hourly given zip code
uv_userzip <- function(zip_arg){
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url, zip_arg, "/JSON")
uvdatazip <- fromJSON(readLines(zipfull_url))
}
uv_userzip("95129")
zipfull_url
View(uvdatazip)
# get uv index hourly given zip code
uv_userzip <- function(zip_arg){
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url, zip_arg, "/JSON")
uvdatazip <- fromJSON(readLines(zipfull_url))
return(uvdatazip)
}
uvdatazip = uv_userzip("95129")
View(uvdatazip)
# get uv index hourly given zip code
uv_userzip <- function(zip_arg){
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url, zip_arg, "/JSON")
uvdatazip <- fromJSON(readLines(zipfull_url))
return(uvdatazip)
}
uv_userzip("95129")
# get uv index hourly given zip code
uv_userzip <- function(zip_arg){
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url, zip_arg, "/JSON")
uvdatazip <- fromJSON(readLines(zipfull_url))
return(uvdatazip)
}
uv_userzip("85323")
# convert time
uvdatazip <- uvdatazip %>%
mutate(NEW_DATE = mdy_h(DATE_TIME))
uvdatacity <- uvdatacity %>%
mutate(NEW_DATE = mdy_h(DATE_TIME))
uvrisk <- data.frame(name = c("Low", "Moderate", "High", "Very High"),
imin = c(0,3,6,8),
imax = c(3,6,8,11),
mycolor = c("A", "B", "C", "D")) %>%
mutate(medy = imin + floor((imax-imin)/2))
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(xmin = c(uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1]), xmax = c(uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21]), ymin = imin, ymax = imax, fill = mycolor)) +
geom_text(data = uvrisk, aes(x = uvdatazip$NEW_DATE[3], y = medy, label = name, size = 3))+
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
#scale_x_continuous(expand = c(0,0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank(),
legend.position = "None")
# get uv index hourly given city, state
uv_usercity <- function(city_arg, state_arg){
citybase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/CITY/"
cityfull_url <- paste0(citybase_url, city_arg, "/STATE/", state_arg, "/JSON")
uvdatacity <- fromJSON(readLines(cityfull_url))
return(uvdatacity)
}
uv_usercity("washington", "dc")
# get uv index hourly given city, state
uv_usercity <- function(city_arg, state_arg){
citybase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/CITY/"
cityfull_url <- paste0(citybase_url, city_arg, "/STATE/", state_arg, "/JSON")
uvdatacity <- fromJSON(readLines(cityfull_url))
return(uvdatacity)
}
uv_usercity("sanjose", "ca")
# get uv index hourly given city, state
uv_usercity <- function(city_arg, state_arg){
citybase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/CITY/"
cityfull_url <- paste0(citybase_url, city_arg, "/STATE/", state_arg, "/JSON")
uvdatacity <- fromJSON(readLines(cityfull_url))
return(uvdatacity)
}
uv_usercity("san jose", "ca")
# convert time
uv_converttime <- function(uvdf){
uvdf %>%
mutate(NEW_DATE = mdy_h(DATE_TIME))
return(uvdf)
}
uvdatacity = uv_converttime(uvdatacity)
uvdatazip = uv_converttime(uvdatazip)
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(xmin = c(uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1]), xmax = c(uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21]), ymin = imin, ymax = imax, fill = mycolor)) +
geom_text(data = uvrisk, aes(x = uvdatazip$NEW_DATE[3], y = medy, label = name, size = 3))+
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
#scale_x_continuous(expand = c(0,0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank(),
legend.position = "None")
uv_plot <- function(uvdf){
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(xmin = c(uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1]), xmax = c(uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21]), ymin = imin, ymax = imax, fill = mycolor)) +
geom_text(data = uvrisk, aes(x = uvdatazip$NEW_DATE[3], y = medy, label = name, size = 3))+
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
#scale_x_continuous(expand = c(0,0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank(),
legend.position = "None")
}
uv_plot <- function(uvdf){
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(xmin = c(uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1], uvdatazip$NEW_DATE[1]), xmax = c(uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21], uvdatazip$NEW_DATE[21]), ymin = imin, ymax = imax, fill = mycolor)) +
geom_text(data = uvrisk, aes(x = uvdatazip$NEW_DATE[3], y = medy, label = name, size = 3))+
geom_line(data = uvdatazip, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
#scale_x_continuous(expand = c(0,0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank(),
legend.position = "None")
}
uv_plot(uvdatacity)
uv_plot(uvdatazip)
View(uvdatazip)
# get uv index hourly given zip code
uv_userzip <- function(zip_arg){
zipbase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/ZIP/"
zipfull_url <- paste0(zipbase_url, zip_arg, "/JSON")
uvdatazip <- fromJSON(readLines(zipfull_url))
return(uvdatazip)
}
uvdatazip = uv_userzip("85323")
# get uv index hourly given city, state
uv_usercity <- function(city_arg, state_arg){
citybase_url <- "https://enviro.epa.gov/enviro/efservice/getEnvirofactsUVHOURLY/CITY/"
cityfull_url <- paste0(citybase_url, city_arg, "/STATE/", state_arg, "/JSON")
uvdatacity <- fromJSON(readLines(cityfull_url))
return(uvdatacity)
}
uvdatacity = uv_usercity("san jose", "ca")
# convert time
uv_converttime <- function(uvdf){
uvdf %>%
mutate(NEW_DATE = mdy_h(DATE_TIME))
return(uvdf)
}
uvdatacity = uv_converttime(uvdatacity)
uvdatazip = uv_converttime(uvdatazip)
uv_plot <- function(uvdf){
ggplot() +
theme_light() +
geom_rect(data = uvrisk, aes(xmin = c(uvdf$NEW_DATE[1], uvdf$NEW_DATE[1], uvdf$NEW_DATE[1], uvdf$NEW_DATE[1]), xmax = c(uvdf$NEW_DATE[21], uvdf$NEW_DATE[21], uvdf$NEW_DATE[21], uvdf$NEW_DATE[21]), ymin = imin, ymax = imax, fill = mycolor)) +
geom_text(data = uvrisk, aes(x = uvdf$NEW_DATE[3], y = medy, label = name, size = 3))+
geom_line(data = uvdf, aes(x = NEW_DATE, y = UV_VALUE)) +
scale_y_continuous("UV Index", limit = c(-0.1, 11), breaks = c(0,1,2,3,4,5,6,7,8,9,10,11), expand = c(0, 0)) +
#scale_x_continuous(expand = c(0,0)) +
ggtitle("UV Index in the Past Day") +
theme(axis.title.x = element_blank(),
legend.position = "None")
}
uv_plot(uvdatacity)
# convert time
uv_converttime <- function(uvdf){
uvdf %>%
mutate(NEW_DATE = mdy_h(DATE_TIME))
return(uvdf)
}
uvdatacity = uv_converttime(uvdatacity)
uvdatazip = uv_converttime(uvdatazip)
View(uvdatazip)
View(uvdatacity)
# convert time
uv_converttime <- function(uvdf){
uvdf <- uvdf %>%
mutate(NEW_DATE = mdy_h(DATE_TIME))
return(uvdf)
}
uvdatacity = uv_converttime(uvdatacity)
uvdatazip = uv_converttime(uvdatazip)
View(uvdatacity)
shiny::runApp('~/Documents/rstudio/test')
runApp('~/Documents/rstudio/test')
runApp('uvIndexApp')
runApp('uvIndexApp')
runApp('uvIndexApp')
runApp('uvIndexApp')
runApp('uvIndexApp')
install.packages("bslib")
runApp('uvIndexApp')
install.packages(htmltools)
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
shiny::runApp('uvIndexApp')
install.packages("shiny")
install.packages("shiny")
runApp('uvIndexApp')
runApp('uvIndexApp')
runApp('uvIndexApp')
runApp('uvIndexApp')
runApp('uvIndexApp')
runApp('~/Documents/rstudio/test')
runApp('uvIndexApp')
runApp('uvIndexApp')
